#!/bin/bash
#
# Vulkan Ultimate Optimizer for AMD RDNA4 (GFX12)
# OpenSUSE Tumbleweed Edition
# Includes full GFX12 wave32 optimizations
#

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã GPU
check_gpu_architecture() {
    local gpu_info
    gpu_info=$(lspci -nn | grep -i "VGA\|3D" | grep -i "AMD/ATI")
    
    if [[ -z "$gpu_info" ]]; then
        echo "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: AMD GPU –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É? (y/N): " confirm
        [[ "$confirm" != "y" ]] && exit 1
        return
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ GFX12
    local vulkan_info=$(vulkaninfo 2>/dev/null | grep "GPU id")
    if [[ ! "$vulkan_info" =~ "GFX12" ]]; then
        echo "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –°–∫—Ä–∏–ø—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è GFX12 (RDNA4)!"
        echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω GPU: $gpu_info"
        echo "Vulkan –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: $vulkan_info"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É? (y/N): " confirm
        [[ "$confirm" != "y" ]] && exit 1
    fi
}

# === –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è GFX12 ===
VARS=(
  # –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (–ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä wave32)
  "RADV_PERFTEST=aco,rt,ngg,bindless_rt,wave32,rtwave32,pswave32,cswave32,gewave32,rt_prim_culling"
  "RADV_DEBUG=nofallback,novrsfl,noinfinitecache"

  # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ GFX12
  "RADV_GFX12_OPTIONS=dual_rt_engines,compact_bvh"
  "RADV_ENABLE_64B_VKRT_NODES=1"
  
  # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏ –ª—É—á–µ–π
  "RADV_BINDLESS_RAYTRACING=1"
  "RADV_RAY_QUERY=1"
  "RADV_RT_MAX_LEVEL=2"

  # –í–∏–¥–µ–æ –∏ –º–µ–¥–∏–∞
  "RADV_VIDEO_DECODE=av1,vp9,hevc,avc"
  "RADV_VIDEO_ENCODE=av1"

  # –ü–∞–º—è—Ç—å –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
  "RADV_ZERO_VRAM=1"
  "RADV_DCC=2"
  "RADV_OPTIMIZE_VRAM_BANDWIDTH=1"
  "RADV_RESIZABLE_BAR=1"

  # –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
  "RADV_ENABLE_MESH_SHADERS=1"
  "RADV_ENABLE_TASK_SHADERS=1"
  "RADV_USE_LLVM=0"
  "RADV_GFX12_ENABLE_OBB=1"
  "RADV_MAX_LIGHTS=256"
)

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (~/.profile) ===
setup_for_user() {
    local PROFILE_FILE="$HOME/.profile"
    local backup_file="$PROFILE_FILE.bak_$(date +%Y%m%d%H%M%S)"
    
    echo -e "\nüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $USER"
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    [[ ! -f "$PROFILE_FILE" ]] && touch "$PROFILE_FILE"
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    cp -v "$PROFILE_FILE" "$backup_file"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
    echo -e "\n# Vulkan GFX12 Optimizations (added $(date +%Y-%m-%d))" >> "$PROFILE_FILE"
    
    local added_count=0
    for var in "${VARS[@]}"; do
        # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        sed -i "/export ${var%%=*}=/d" "$PROFILE_FILE"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        echo "export $var" >> "$PROFILE_FILE"
        echo "   ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: $var"
        ((added_count++))
    done
    
    if [[ $added_count -gt 0 ]]; then
        echo -e "\n‚ú® –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ $added_count –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö!"
        echo -e "–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:\n"
        echo -e "   source \"$PROFILE_FILE\""
        echo -e "   –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É\n"
    else
        echo -e "\n‚ÑπÔ∏è  –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è."
    fi
    
    echo "üîÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backup_file"
}

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (/etc/environment) ===
setup_for_all_users() {
    local ENV_FILE="/etc/environment"
    local backup_file="$ENV_FILE.bak_$(date +%Y%m%d%H%M%S)"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
    if [[ $EUID -ne 0 ]]; then
        echo -e "\n‚ùå –û—à–∏–±–∫–∞: –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ root!"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø–æ–º–æ—â—å—é sudo:"
        echo -e "   sudo $0\n"
        exit 1
    fi
    
    echo -e "\nüåç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–∏—Å—Ç–µ–º—ã"
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    cp -v "$ENV_FILE" "$backup_file"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
    echo -e "\n# Vulkan GFX12 Optimizations (added $(date +%Y-%m-%d))" >> "$ENV_FILE"
    
    local added_count=0
    for var in "${VARS[@]}"; do
        local key="${var%%=*}"
        # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        sed -i "/^$key=/d" "$ENV_FILE"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        echo "$var" >> "$ENV_FILE"
        echo "   ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: $var"
        ((added_count++))
    done
    
    if [[ $added_count -gt 0 ]]; then
        echo -e "\n‚ú® –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ $added_count –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö!"
        echo -e "–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:\n"
        echo -e "   sudo reboot\n"
    else
        echo -e "\n‚ÑπÔ∏è  –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è."
    fi
    
    echo "üîÅ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backup_file"
}

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã ===
check_system() {
    echo -e "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã:\n"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞
    if ! grep -qi "opensuse tumbleweed" /etc/os-release; then
        echo "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –°–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è OpenSUSE Tumbleweed"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É? (y/N): " confirm
        [[ "$confirm" != "y" ]] && exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Mesa (—Ç—Ä–µ–±—É–µ—Ç—Å—è Mesa 24.2+ –¥–ª—è GFX12)
    local mesa_version=$(rpm -q --queryformat '%{VERSION}' mesa 2>/dev/null | cut -d. -f1-2)
    if [[ -z "$mesa_version" ]]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –ü–∞–∫–µ—Ç Mesa –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo zypper install Mesa"
        exit 1
    elif [[ $(echo "$mesa_version < 24.2" | bc -l) -eq 1 ]]; then
        echo "‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Mesa (—Ç–µ–∫—É—â–∞—è: $mesa_version, —Ç—Ä–µ–±—É–µ—Ç—Å—è: 24.2+)"
        echo "–û–±–Ω–æ–≤–∏—Ç–µ: sudo zypper dup"
        echo "–ò–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: sudo zypper addrepo -f https://download.opensuse.org/repositories/games/openSUSE_Tumbleweed/ games"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É? (y/N): " confirm
        [[ "$confirm" != "y" ]] && exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Vulkan
    if ! command -v vulkaninfo &> /dev/null; then
        echo "‚ùå Vulkan Tools –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo zypper install vulkan-tools"
        exit 1
    fi
    
    echo -e "------------------------------------------"
}

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ GFX12 ===
check_gfx12_support() {
    echo -e "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ GFX12:"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ GPU
    local gpu_id=$(vulkaninfo | grep "deviceName" | grep -i "gfx12")
    if [[ -n "$gpu_id" ]]; then
        echo "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ GFX12 GPU: $gpu_id"
    else
        echo "‚ö†Ô∏è  GFX12 GPU –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!"
        echo "–¢–µ–∫—É—â–µ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: $(vulkaninfo | grep "deviceName" | head -1)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
    echo -e "\n–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π:"
    vulkaninfo | grep -E \
      "VK_AMD_ray_tracing|VK_KHR_ray_tracing_pipeline|VK_KHR_ray_query|VK_EXT_mesh_shader"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≤–∏–¥–µ–æ
    echo -e "\n–í–∏–¥–µ–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:"
    vulkaninfo | grep -E "av1|vp9|hevc" | grep "decode" | uniq
}

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
show_menu() {
    clear
    echo -e "\n=============================================="
    echo " Vulkan Ultimate Optimizer for AMD GFX12 (RDNA4)"
    echo " OpenSUSE Tumbleweed Edition"
    echo "=============================================="
    echo -e " –¢–µ–∫—É—â–∞—è —Å–∏—Å—Ç–µ–º–∞: $(grep PRETTY_NAME /etc/os-release | cut -d= -f2 | tr -d '\"')"
    echo -e " –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $USER\n"
    
    check_gpu_architecture
    
    echo -e "\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n"
    echo " 1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (~/.profile)"
    echo " 2) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (/etc/environment)"
    echo " 3) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vulkan"
    echo " 4) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É GFX12"
    echo " 5) –£–¥–∞–ª–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–∏–∑ ~/.profile)"
    echo " q) –í—ã—Ö–æ–¥"
    echo -e "\n----------------------------------------------"
    
    read -p "–í–∞—à –≤—ã–±–æ—Ä: " choice
}

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ ===
check_current_settings() {
    echo -e "\nüîç –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vulkan:\n"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    for var in "${VARS[@]}"; do
        local key="${var%%=*}"
        echo -n "   $key: "
        if grep -q "^export $key=" ~/.profile 2>/dev/null; then
            echo -n "[–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] "
        fi
        if grep -q "^$key=" /etc/environment 2>/dev/null; then
            echo -n "[—Å–∏—Å—Ç–µ–º–∞] "
        fi
        env | grep "^$key=" || echo "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    done
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥—Ä–∞–π–≤–µ—Ä–µ
    echo -e "\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥—Ä–∞–π–≤–µ—Ä–µ:"
    vulkaninfo | grep -E "driverName|driverInfo|apiVersion" | head -3
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    echo -e "\n–ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:"
    vulkaninfo | grep -E \
      "RADV_PERFTEST|RADV_GFX12|dual_rt_engines|compact_bvh|mesh_shader"
    
    echo
}

# === –£–¥–∞–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ ===
remove_settings() {
    local PROFILE_FILE="$HOME/.profile"
    local backup_file="$PROFILE_FILE.clean_$(date +%Y%m%d%H%M%S)"
    
    [[ ! -f "$PROFILE_FILE" ]] && return
    
    cp -v "$PROFILE_FILE" "$backup_file"
    
    # –£–¥–∞–ª—è–µ–º —Ä–∞–∑–¥–µ–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    sed -i '/# Vulkan GFX12 Optimizations/,/^$/d' "$PROFILE_FILE"
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ VARS
    for var in "${VARS[@]}"; do
        local key="${var%%=*}"
        sed -i "/^export $key=/d" "$PROFILE_FILE"
    done
    
    echo -e "\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ ~/.profile"
    echo "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: $backup_file"
}

# === –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
main() {
    check_system
    
    while true; do
        show_menu
        
        case "$choice" in
            1)
                setup_for_user
                ;;
            2)
                setup_for_all_users
                ;;
            3)
                check_current_settings
                ;;
            4)
                check_gfx12_support
                ;;
            5)
                remove_settings
                ;;
            q|Q)
                echo -e "\n–í—ã—Ö–æ–¥...\n"
                exit 0
                ;;
            *)
                echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
                ;;
        esac
        
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    done
}

# –ó–∞–ø—É—Å–∫
main
